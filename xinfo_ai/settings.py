"""
Django settings for xinfo_ai project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv(dotenv_path=".env")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-y^ei23wz$%cf04!xbg1x90v1t=+bxr*d9af=lh^vza9f#!eajn"



ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "authentication",
    "website",
    "admin_panel",
    "user_panel",
    'rest_framework',
    # 'django_filters',
    # 'corsheaders',
    # 'rest_framework.authtoken',
    # 'drf_yasg',
    # 'django_extensions',
    # 'django.contrib.sites',
    # 'allauth',
    # 'allauth.account',
    # 'allauth.socialaccount',
    # 'allauth.socialaccount.providers.google',
    # 'allauth.socialaccount.providers.facebook',
    # 'allauth.socialaccount.providers.twitter',
    # 'allauth.socialaccount.providers.linkedin',
    # 'allauth.socialaccount.providers.instagram',
    # 'allauth.socialaccount.providers.github',
    # 'allauth.socialaccount.providers.pinterest',
    # 'allauth.socialaccount.providers.reddit',
    # 'allauth.socialaccount.providers.spotify',
    # 'allauth.socialaccount.providers.twitch',
    # 'allauth.socialaccount.providers.vk',
    # 'allauth.socialaccount.providers.yahoo',
    # 'allauth.socialaccount.providers.amazon',
    # 'allauth.socialaccount.providers.dropbox',
    # 'allauth.socialaccount.providers.disqus',
    # 'allauth.socialaccount.providers.foursquare',
    # 'allauth.socialaccount.providers.openid',
    # 'allauth.socialaccount.providers.soundcloud',
    # 'allauth.socialaccount.providers.stripe',
    # 'allauth.socialaccount.providers.tumblr',
    # 'allauth.socialaccount.providers.vimeo',
    # 'allauth.socialaccount.providers.weibo',
    # 'allauth.socialaccount.providers.xing',
    # 'allauth.socialaccount.providers.coinbase',
    # 'allauth.socialaccount.providers.slack',
    # 'allauth.socialaccount.providers.steam',
    # 'allauth.socialaccount.providers.twitch',
]

MIDDLEWARE = [
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "xinfo_ai.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "xinfo_ai.wsgi.application"
AUTH_USER_MODEL = 'authentication.CustomUser'

# JWT settings
from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,  
    "AUTH_HEADER_TYPES": ("Bearer",),
}

LOGIN_URL = '/login/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / "media"

# blob storage configuration
MEDIA_URL = '/media/'
MEDIA_ROOT = '/opt/myproject/myproject/media/'


# VPS_HOST = "148.72.247.27" 
# VPS_USER = "discombadmin"    
# VPS_PASSWORD = "Tomtom@#2025"    
# DOCUMENTS_PATH = "/opt/myproject/myproject/media" 

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases



# DATABASES = {
#      'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         "NAME": os.getenv("DATABASE_NAME"),
#         "USER": os.getenv("DATABASE_USER"),
#         "PASSWORD": os.getenv("DATABASE_PASSWORD"), 
#         "HOST": os.getenv("DATABASE_HOST"),
#         "PORT": os.getenv("DATABASE_PORT"),
#         'ATOMIC_REQUESTS': True
#      }
#  }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'info_ai_db',
#         'USER': 'postgres',
#         'PASSWORD': '1234',
#         'HOST': 'localhost',

#         # 'NAME': 'info_ai_db',
#         # 'USER': 'info_ai',
#         # 'PASSWORD': 'info@#2025',
#         # 'HOST': '97.74.83.234',

#         'PORT': '5432',
#         'ATOMIC_REQUESTS': True
#     }
# }

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False
DEBUG = True

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
        "ATOMIC_REQUESTS": True
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "Asia/Kolkata"
USE_I18N = True
USE_TZ = True


OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")



# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Email settings (SMTP)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'cfctech07@gmail.com'
EMAIL_HOST_PASSWORD = 'cmxj ergf yakb tush'